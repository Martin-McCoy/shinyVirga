% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils_general.R
\name{add_pseudo_module}
\alias{add_pseudo_module}
\title{Add a pseudo-module, one which maintains the namespace of it's parent module}
\usage{
add_pseudo_module(
  name,
  path = "R",
  export = FALSE,
  pm_name = sprintf("pmod_\%s", name),
  pm_ui = sprintf("pmod_\%s_ui", name),
  pm_server = sprintf("pmod_\%s_server", name),
  use_ud = TRUE,
  open = TRUE
)
}
\arguments{
\item{name}{\code{chr} name of the module}

\item{path}{\code{chr} directory in which to create it}

\item{export}{\code{lgl} whether it should be exported in the package}

\item{pm_name}{\code{chr} The name of file}

\item{pm_ui}{\code{chr} The name of the module ui function}

\item{pm_server}{\code{chr} The name of the module server function}

\item{use_ud}{\code{lgl} Whether to include the \code{session$userData} environment as a shorthand variable \code{ud} in the module for ease of access to a user's session state variables.}
}
\value{
\code{file} The new file opens
}
\description{
The usage of a pseudo-module is nearly identical to the module, but inputs & outputs in the pseudo-module are shared between the parent and the pseudo-module. This allows for developers to functionalize input components whose values must necessarily must be considered in confluence with one another. Using modules, the developer must keep track of shared inputs explicitly between modules using \code{\link[shiny]{reactiveVal}} and/or \code{\link[shiny]{reactiveValues}} and pass them as arguments to any nested modules. As a codebase changes, and inputs are added and removed, keeping track of where confluences of interactions are stored and updating arguments accordingly is cumulative technical debt. With pseudo-modules shared reactive inputs allow the developer to logically segment interactivity involving confluences of inputs as they see fit without incurring the technical debt of passing \code{\link[shiny]{reactiveVal}} and/or \code{\link[shiny]{reactiveValues}} around when interactions are removed or added.
}
