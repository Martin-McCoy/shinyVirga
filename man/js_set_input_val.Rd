% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils_js.R
\name{js_set_input_val}
\alias{js_set_input_val}
\title{Create a javascript callback that runs when shiny connects.}
\usage{
js_set_input_val(
  id,
  js,
  value,
  ...,
  asis = FALSE,
  add_tag = TRUE,
  .ns = ns_find()
)
}
\arguments{
\item{id}{\code{(chr)} Automatically namespaced with \code{ns} if inside a module}

\item{js}{\code{(chr)} path to js file with just the anonymous function, or js code to interpolate into a generalized anonymous javascript function that uses glue insertions demarcated by \code{{{}}}:
\preformatted{
(e) => {
         console.log('{{input}} event');
         {{js}}
Shiny.setInputValue('{{input}}', {{value}}, {priority: 'event'});
};}}

\item{value}{\code{(js)} arbitrary js code that defines the value to bind. Can also be a variable name if declared in the \code{js} argument}

\item{...}{\code{(additional named arguments)} corresponding to any arguments that need be interpolated with \link[glue]{glue}}

\item{asis}{If \code{TRUE}, use the ID as-is even when inside a module
(instead of adding the namespace prefix to the ID).}

\item{add_tag}{\code{lgl} whether to enclose in a script tag}

\item{.ns}{\code{fun} ns function. Typically found automatically}
}
\value{
\code{shiny.tag} script tag with javascript
}
\description{
Create a javascript callback that runs when shiny connects.
}
\seealso{
Other JS: 
\code{\link{js_after}()},
\code{\link{js_callback}()},
\code{\link{js_mouseover_once}()}
}
\concept{JS}
